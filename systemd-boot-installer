#!/bin/bash -eu
SCRIPT="$(basename "$0")"

function print_help () {
    cat << EOL
$SCRIPT: automatic systemd-boot installer.
Usage: $0 [OPTIONS...]

Options:
  -e, --efi: EFI partition (eg: /dev/nvme0n1p1)
  -b, --boot: Boot partition (eg: /dev/nvme0n1p2)
  -r, --root: root partition (eg: /dev/nvme0n1p3)
  -h, --help: Show this help.
EOL
}

if [[ "$(id -u)" -ne 0 ]];then
    print_help
    echo ""
    echo "$SCRIPT: require root."
    exit 1
fi

boot=""
efi=""
root=""
while [[ $# -gt 0 ]]; do
    case "$1" in
        -e | --efi ) efi="$2" ; shift; shift;;
        -b | --boot) boot="$2" ; shift; shift;;
        -r | --root) root="$2" ; shift; shift;;
        -v | --varbose) set -x ; shift;; # 隠し
        -h | --help | *) print_help ; exit;;
    esac
done

: "Get partition info" && {
    mounted="$(df -P | awk '$6=="/target"{print $1}')"
    if [[ -z "$root" ]];then
        root="$(cryptsetup status "$mounted" | awk '$1=="device:"{print $2}')"
    fi
    if [[ "$root" == "/dev/nvme"* ]];then
        part_base="$(echo "$root" | sed -r 's/p[0-9]+$//')"
        part_prefix="p"
    else
        part_base="$(echo "$root" | sed -r 's/[0-9]+$//')"
        part_prefix=""
    fi
    luks_uuid="$(blkid -s UUID -o value ${mounted})"

    if [[ -z "$efi" ]];then
        num="$(sgdisk -p "$part_base" | awk '$6=="EF00" {print $1}')"
        efi="${part_base}${part_prefix}${num}"
    fi

    if [[ -z "$boot" ]];then
        part="$(find /dev/ -maxdepth 1 | grep -e "${part_base}${part_prefix}[^${root#"$part_base$part_prefix"}${efi#"$part_base$part_prefix"}]")"
        if [[ "$(echo "$part" | wc -l)" -gt 1 ]];then
            echo "can't detect boot partition: $(echo "$part" | tr "\n" " ")"
            echo "use --boot flag for select boot partition"
            exit 1
        fi 
        boot="$part"
    fi
}

mount "$boot" /target/boot
mount "$efi" /target/boot/efi
bootctl "--esp-path=${efi}" "--boot-path=${boot}" --make-machine-id-directory=no install

source /target/etc/os-release
cat << EOL | tee /target/boot/efi/loader/entries/boot.conf
title $PRETTY_NAME
linux /vmlinuz
initrd /initrd.img
options root=UUID=$luks_uuid ro quiet splash
EOL
echo ""

cat << EOL | tee /target/boot/efi/loader/loader.conf
default boot
editor no
EOL
echo ""

cp -Lfv /target/boot/vmlinuz /target/boot/efi/
cp -Lfv /target/boot/initrd.img /target/boot/efi/

umount /target/{boot/efi,boot}
